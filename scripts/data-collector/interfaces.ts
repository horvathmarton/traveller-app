// Generated by https://quicktype.io

export interface Root {
    timelineObjects: TimelineObject[];
}

export interface TimelineObject {
    placeVisit?:      PlaceVisit;
    activitySegment?: ActivitySegment;
}

export interface ActivitySegment {
    startLocation:           Location;
    endLocation:             Location;
    duration:                Duration;
    activityType?:           ActivityType;
    activities:              Activity[];
    simplifiedRawPath?:      SimplifiedRawPath;
    distance?:               number;
    confidence?:             Confidence;
    waypointPath?:           WaypointPath;
    editConfirmationStatus?: EditConfirmationStatus;
}

export interface Activity {
    activityType: ActivityType;
    probability:  number;
}

export enum ActivityType {
    Cycling = "CYCLING",
    Flying = "FLYING",
    InVehicle = "IN_VEHICLE",
    UnknownActivityType = "UNKNOWN_ACTIVITY_TYPE",
    Walking = "WALKING",
}

export enum Confidence {
    High = "HIGH",
    Low = "LOW",
    Medium = "MEDIUM",
    UnknownConfidence = "UNKNOWN_CONFIDENCE",
}

export interface Duration {
    startTimestampMs: string;
    endTimestampMs:   string;
}

export enum EditConfirmationStatus {
    NotConfirmed = "NOT_CONFIRMED",
}

export interface Location {
    latitudeE7?:         number;
    longitudeE7?:        number;
    placeId?:            string;
    address?:            string;
    name?:               string;
    semanticType?:       SemanticType;
    locationConfidence?: number;
}

export enum SemanticType {
    TypeHome = "TYPE_HOME",
    TypeSearchedAddress = "TYPE_SEARCHED_ADDRESS",
}

export interface SimplifiedRawPath {
    points: Point[];
}

export interface Point {
    latE7:          number;
    lngE7:          number;
    timestampMs:    string;
    accuracyMeters: number;
}

export interface WaypointPath {
    waypoints: { [key: string]: number }[];
}

export interface PlaceVisit {
    location:                 Location;
    duration:                 Duration;
    placeConfidence:          PlaceConfidence;
    centerLatE7:              number;
    centerLngE7:              number;
    visitConfidence:          number;
    otherCandidateLocations?: Location[];
    editConfirmationStatus:   EditConfirmationStatus;
    simplifiedRawPath?:       SimplifiedRawPath;
}

export enum PlaceConfidence {
    HighConfidence = "HIGH_CONFIDENCE",
    LowConfidence = "LOW_CONFIDENCE",
    MediumConfidence = "MEDIUM_CONFIDENCE",
}
